{"1761672887259":{"actionType":"saveAll","createdAt":"1761672887259","actionID":"1761672887259","userID":"#TEMP","path":"system.capsules.9ede5bcc-a47c-4aa0-a2a7-5510d3d6a16e.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"(args) => {\n  const css1 =\n    \"color: limegreen; background-color: darkcyan; font-size: 11px; padding: 2px 6px; border-radius: 3px\";\n  const pathSideRight = \"all.toggles.sideRight\";\n  const pathEdit = \"all.toggles.b9.editSteps\";\n  const pathNew = \"all.toggles.b8.addSteps\";\n  const item = tools.findFlatItem(args);\n  const stepsList = tools.getCtData(\"sc.B7.lists.list1\");\n\n  let condMatch = false;\n  let currId;\n  console.log({ item, stepsList });\n\n  stepsList?.forEach((d: any) => {\n    if (d?.stepId === item?.stepId) {\n      condMatch = true;\n      currId = d?.docId;\n    }\n  });\n\n  // ---- set 1\n  const set1 = { path: pathSideRight, value: true };\n  tools.setData(set1);\n\n  const set2A = { path: pathNew, value: true };\n  const set2B = { path: pathEdit, value: false };\n  // ---- set 2\n  if (!condMatch) {\n    console.log(\"%cAdd New Step Mode - \" + pathNew, css1);\n    tools.setData(set2A);\n    tools.setData(set2B);\n\n    const stepId = item.stepId;\n\n    const set4 = { path: \"sc.B8.forms.iptsChanges.stepId\", value: stepId };\n    tools.setData(set4);\n  }\n\n  const set3A = { path: pathEdit, value: true };\n  const set3B = { path: pathNew, value: false };\n  const set3C = { path: 'sc.B9.forms.editChanges.docId', value: currId };\n  // ---- set 3\n  if (condMatch) {\n    console.log(\"%cEdit Step Mode - \" + pathEdit, css1);\n    tools.setData(set3A);\n    tools.setData(set3B);\n    tools.setData(set3C);\n  }\n}\n","newValue":"(args) => {\n  const css1 =\n    \"color: limegreen; background-color: darkcyan; font-size: 11px; padding: 2px 6px; border-radius: 3px\";\n  const pathSideRight = \"all.toggles.sideRight\";\n  const pathEdit = \"all.toggles.b9.editSteps\";\n  const pathNew = \"all.toggles.b8.addSteps\";\n  const item = tools.findFlatItem(args);\n  const stepsList = tools.getCtData(\"sc.B7.lists.list1\");\n\n  let condMatch = false;\n  let currId;\n  console.log({ item, stepsList });\n\n  stepsList?.forEach((d: any) => {\n    if (d?.stepId === item?.stepId) {\n      condMatch = true;\n      currId = d?.docId;\n    }\n  });\n\n  // ---- set 1\n  const set1 = { path: pathSideRight, value: true };\n  tools.setData(set1);\n\n  const set2A = { path: pathNew, value: true };\n  const set2B = { path: pathEdit, value: false };\n  // ---- set 2\n  if (!condMatch) {\n    console.log(\"%cAdd New Step Mode - \" + pathNew, css1);\n    tools.setData(set2A);\n    tools.setData(set2B);\n\n    const stepId = item.stepId;\n\n    const set4 = { path: \"sc.B8.forms.iptsChanges.stepId\", value: stepId };\n    tools.setData(set4);\n  }\n\n  const set3A = { path: pathEdit, value: true };\n  const set3B = { path: pathNew, value: false };\n  const set3C = { path: 'sc.B9.forms.editChanges.docId', value: currId };\n  // ---- set 3\n  if (condMatch) {\n    console.log(\"%cEdit Step Mode - \" + pathEdit, css1);\n    tools.setData(set3A);\n    tools.setData(set3B);\n    tools.setData(set3C);\n  }\n}"}}