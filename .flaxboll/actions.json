{"1758814363072":{"actionType":"saveAll","createdAt":"1758814363072","actionID":"1758814363072","userID":"#TEMP","path":"system.capsules.6edfee4b-b4b6-48c3-8f82-1f60ef1eca55.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"async () => {\n  console.log('Login Firebase c/ Email e Senha');\n\n  const email = tools.getCtData('sc.A0.forms.iptsChanges.userEmail');\n  const senha = tools.getCtData('sc.A0.forms.iptsChanges.userPassword');\n\n  const { getAuth, signInWithEmailAndPassword } = await import('firebase/auth');\n\n  const fbInit = tools.getCtData('all.temp.fireInit');\n  const auth = getAuth(fbInit);\n\n  console.log('Login Firebase c/ Email e Senha', { auth });\n\n  try {\n    const cred = await signInWithEmailAndPassword(auth, email, senha);\n\n    console.log('Usuário logado:', cred);\n\n    tools.goTo('a1list');\n\n    return cred.user;\n  } catch (err: any) {\n    console.error('Erro no login:', err);\n\n    tools.setData({\n      path: 'sc.A0.forms.showErr',\n      value: true,\n    });\n\n    tools.setData({\n      path: 'sc.A0.forms.msgs.msg1',\n      value: 'Usuário ou Senha incorretos.',\n    });\n    return;\n  }\n}","newValue":"async () => {\n  console.log('Login Firebase c/ Email e Senha');\n\n  const rawEmail = tools.getCtData('sc.A0.forms.iptsChanges.userEmail');\n  const rawSenha = tools.getCtData('sc.A0.forms.iptsChanges.userPassword');\n  const email = (rawEmail ?? '').trim();\n  const senha = rawSenha ?? '';\n\n  if (!email || !senha) {\n    tools.setData({ path: 'sc.A0.forms.showErr', value: true });\n    tools.setData({\n      path: 'sc.A0.forms.msgs.msg1',\n      value: 'Informe e-mail e senha.',\n    });\n    return;\n  }\n\n  // Auth\n  const { getAuth, signInWithEmailAndPassword } = await import('firebase/auth');\n\n  // Garantir app inicializado\n  let fbInit = tools.getCtData('all.temp.fireInit');\n  if (!fbInit) {\n    const { initializeApp, getApps } = await import('firebase/app');\n    const cfg = tools.getCtData('all.temp.fireConfig'); // opcional: pegue sua config do CT\n    fbInit = getApps().length ? getApps()[0] : initializeApp(cfg);\n    tools.setData({ path: 'all.temp.fireInit', value: fbInit });\n  }\n\n  const auth = getAuth(fbInit);\n  console.log('Login Firebase c/ Email e Senha → auth ok');\n\n  try {\n    const cred = await signInWithEmailAndPassword(auth, email, senha);\n    console.log('Usuário logado:', cred.user.uid);\n\n    // Firestore\n    const { getFirestore, doc, getDoc } = await import('firebase/firestore');\n    const db = getFirestore(fbInit);\n\n    const snap = await getDoc(doc(db, 'users', cred.user.uid));\n    if (!snap.exists()) {\n      // Opcional: crie doc padrão em vez de lançar erro\n      // import { setDoc } from \"firebase/firestore\"; await setDoc(doc(db,\"users\", cred.user.uid), { typeAccount:\"app\", userAuthID: cred.user.uid, userEmail: email });\n      throw new Error('PERFIL_INEXISTENTE');\n    }\n\n    const data = snap.data();\n\n    // Guarda no seu state/context\n    tools.setData({\n      path: 'all.authUser',\n      value: { uid: cred.user.uid, email: cred.user.email, ...data },\n    });\n\n    // Roteamento por tipo de conta\n    const typeAccount = data?.typeAccount; // \"adm\" | \"app\" | \"partner\"\n    if (typeAccount === 'adm') tools.goTo('a1list');\n    else if (typeAccount === 'app') tools.goTo('b1list');\n    else if (typeAccount === 'partner') tools.goTo('a2list');\n    else {\n      // fallback\n      tools.goTo('b1list');\n    }\n\n    return cred.user;\n  } catch (err: any) {\n    console.error('Erro no login:', err);\n\n    const code = err?.code || err?.message || '';\n    let msg = 'Não foi possível entrar. Tente novamente.';\n\n    if (code.includes('auth/invalid-email')) msg = 'E-mail inválido.';\n    else if (\n      code.includes('auth/wrong-password') ||\n      code.includes('auth/user-not-found')\n    )\n      msg = 'Usuário ou senha incorretos.';\n    else if (code.includes('auth/too-many-requests'))\n      msg = 'Muitas tentativas. Aguarde alguns minutos.';\n    else if (code.includes('PERFIL_INEXISTENTE'))\n      msg = 'Perfil do usuário não encontrado. Contate o suporte.';\n\n    tools.setData({ path: 'sc.A0.forms.showErr', value: true });\n    tools.setData({ path: 'sc.A0.forms.msgs.msg1', value: msg });\n    return;\n  }\n}"}}