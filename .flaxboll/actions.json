{"1753825057357":{"actionType":"saveAll","createdAt":"1753825057357","actionID":"1753825057357","userID":"#TEMP","path":"system.capsules.938bc73d-5ea1-4c7e-b04b-ffe1b51f1c9c.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Local Tools\nimport { getCtData, testVarType } from '../../project';\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  collection,\n  Timestamp,\n} from 'firebase/firestore';\n\nexport const css1 =\n  'color: green; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\nexport const css2 =\n  'color: yellow; background-color: green; font-size: 10px; padding: 2px 6px; border-radius: 3px';\n\ntype Tprops = {\n  args: any;\n  pass: {\n    arrRefStrings: string[];\n    arrPathData: string[];\n    arrFuncs: any[];\n  };\n};\n\nexport const setDocTool = async (props: Tprops) => {\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrRefStrings, arrPathData, arrFuncs } = pass;\n\n  // -----------------------------\n  // ---------- set Firestore Call\n  // -----------------------------\nconst newArrStringRefs = arrRefStrings.map(i => {\n    console.log('1', { i });\n    const varValue = testVarType(i, args);\n    console.log('2', { varValue });\n\n    return varValue;\n  });\n\n  console.log('3', { newArrStringRefs });\t\n\nconst fbInit = getCtData('all.temp.fireInit');\n  const fireInit = getFirestore(fbInit);\n  console.log({ fireInit });\n  const refColl = collection(fireInit, ...newArrStringRefs);\n  const refDoc = doc(refColl);\n\n  // ------ check Data\n  if (!Array.isArray(arrRefStrings))\n    return console.log('newArrRef needs to be a string array', newArrRef);\n\n  // ------ read Data\n  let dataToSet = {};\n  dataToSet = getCtData(arrPathData.join());\n  // console.log({ dataToSet });\n\n  // ------ add new id\n  dataToSet.docId = refDoc.id;\n  dataToSet.createdAt = Timestamp.now();\n\n  await setDoc(refDoc, dataToSet).catch(err =>\n    console.log('Erro do setDoc', { err }),\n  );\n\n  // ---------- set Get Value Functions\n  for (const currFunc of arrFuncs) await currFunc(dataToSet, args);\n\n  console.log('%csetDoc ok', css1);\n  console.log('%cReferencia do Documento', css2, { newArrStringRefs, dataToSet });\n\n  return dataToSet;\n};","newValue":"// ---------- import Local Tools\nimport { getCtData, testVarType } from '../../project';\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  collection,\n  Timestamp,\n} from 'firebase/firestore';\n\nexport const css1 =\n  'color: green; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\nexport const css2 =\n  'color: yellow; background-color: green; font-size: 10px; padding: 2px 6px; border-radius: 3px';\n\ntype Tprops = {\n  args: any;\n  pass: {\n    arrRefStrings: string[];\n    arrPathData: string[];\n    arrFuncs: any[];\n  };\n};\n\nexport const setDocTool = async (props: Tprops) => {\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrRefStrings, arrPathData, arrFuncs } = pass;\n\n  // -----------------------------\n  // ---------- set Firestore Call\n  // -----------------------------\n  const newArrStringRefs = arrRefStrings.map(i => {\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n\n  console.log('3', { newArrStringRefs });\n\n  const fbInit = getCtData('all.temp.fireInit');\n  const fireInit = getFirestore(fbInit);\n  console.log({ fireInit });\n  const refColl = collection(fireInit, ...newArrStringRefs);\n  const refDoc = doc(refColl);\n\n  // ------ check Data\n  if (!Array.isArray(arrRefStrings))\n    return console.log('newArrRef needs to be a string array', newArrRef);\n\n  // ------ read Data\n  let dataToSet = {};\n  const newPath = arrPathData.map(i => {\n    const varValue = testVarType(i, args);\n    return varValue;\n  });\n  dataToSet = getCtData(newPath.join('.'));\n\n  // ------ add new id\n  dataToSet.docId = refDoc.id;\n  dataToSet.createdAt = Timestamp.now();\n\n  await setDoc(refDoc, dataToSet).catch(err =>\n    console.log('Erro do setDoc', { err }),\n  );\n\n  // ---------- set Get Value Functions\n  for (const currFunc of arrFuncs) await currFunc(dataToSet, args);\n\n  console.log('%csetDoc ok', css1);\n  console.log('%cReferencia do Documento', css2, {\n    newArrStringRefs,\n    dataToSet,\n  });\n\n  return dataToSet;\n};\n"}}