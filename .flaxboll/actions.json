{"1760031327120":{"actionType":"saveAll","createdAt":"1760031327120","actionID":"1760031327120","userID":"#TEMP","path":"system.capsules.665979e6-3560-46a2-a871-c913d82be2e2.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Packs\nimport React from 'react';\nimport * as RN from 'react-native';\nimport { importRender } from './localModules';\n\ntype Tprops = {\n  pass: {\n    variable: string[];\n    childrenItems: any[];\n    arrFuncs: any[];\n    args: any;\n  };\n};\n\nexport const BtnImagePicker = (props: Tprops) => {\n  const isWeb = RN.Platform.OS === 'web';\n  const isAndroid = RN.Platform.OS === 'android';\n\n  type Trender1 = null | React.JSX.Element;\n  const [SttComp, SetComp] = React.useState<Trender1>(null);\n\n  // ---------- set Props\n  const { arrFuncs, args } = props.pass;\n\n  console.log({ arrFuncs, args, isWeb });\n\n  // ---------- set WEB Component apenas se necessário\n  if (isWeb && !SttComp) {\n    SetComp(importRender({ type: 'web', arrFuncs, args }));\n  }\n\n  // ---------- set Native Component apenas se necessário\n  if (!isAndroid && !SttComp) {\n    SetComp(importRender({ type: 'native', arrFuncs, args }));\n  }\n\n  return <>{SttComp}</>;\n};\n\nconst styles = RN.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 20,\n  },\n  image: {\n    width: 300,\n    height: 200,\n    resizeMode: 'cover',\n    borderRadius: 10,\n  },\n});\n","newValue":"// ---------- import Packs\nimport React from 'react';\nimport * as RN from 'react-native';\nimport { importRender } from './localModules';\n\ntype Tprops = {\n  pass: {\n    variable: string[];\n    childrenItems: any[];\n    arrFuncs: any[];\n    args: any;\n  };\n};\n\nexport const BtnImagePicker = (props: Tprops) => {\n  const isWeb = RN.Platform.OS === 'web';\n\n  type Trender1 = null | React.JSX.Element;\n  const [SttComp, SetComp] = React.useState<Trender1>(null);\n\n  // ---------- set Props\n  const { arrFuncs, args } = props.pass;\n\n  // ---------- CORREÇÃO: decide uma única vez\n  if (!SttComp) {\n    if (isWeb && typeof document !== 'undefined') {\n      SetComp(importRender({ type: 'web', arrFuncs, args }));\n    } else {\n      // vale para android/ios (nativo)\n      SetComp(importRender({ type: 'native', arrFuncs, args }));\n    }\n  }\n\n  return <>{SttComp}</>;\n};\n\nconst styles = RN.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 20,\n  },\n  image: {\n    width: 300,\n    height: 200,\n    resizeMode: 'cover',\n    borderRadius: 10,\n  },\n});\n"}}