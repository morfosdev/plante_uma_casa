{"1761675780236":{"actionType":"saveAll","createdAt":"1761675780236","actionID":"1761675780236","userID":"#TEMP","path":"system.capsules.0e1ba4b0-147d-4499-abf4-4ed9d8debb14.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"import { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport { getCtData, testVarType } from \"../../project\";\n\ntype Tprops = {\n  args: any;\n  pass: { arrFiles: any[]; arrFuncs: any[] };\n};\n\nexport const uploadFile = async (props: Tprops) => {\n  console.log(\"UPLOAD DE ARQUIVOS\");\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrFiles, arrFuncs } = pass;\n  console.log({ arrFiles, arrFuncs });\n\n  // ---------- set GetData Ref Strings\n  const newArrImages = arrFiles.map((i) => {\n    const varValue = testVarType(i, args);\n    console.log(\"2\", { varValue });\n\n    return varValue;\n  });\n\n  // -----------------------------\n  // -------- set Firestore Call 1\n  // -----------------------------\n  const fbInit = getCtData(\"all.temp.fireInit\");\n\n  const storage = getStorage(fbInit);\n  const objData = newArrImages;\n  console.log({ objData });\n\n  objData &&\n    objData.forEach(async (currData: any, idx: number) => {\n        console.log({ currData });\n      const time = Date.now().toString();\n      const strRefFile = ref(storage, `images/` + time + currData.name);\n      console.log({ strRefFile });\n      const file = objData.output[idx];\n      console.log({ file });\n      await uploadBytes(strRefFile, file);\n\n      // ---------- set Return Functions\n      const firestoreURL = await getDownloadURL(strRefFile);\n      console.log({ firestoreURL });\n\n      for (const currFunc of arrFuncs) await currFunc(args, firestoreURL, idx);\n    });\n}","newValue":"import { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport { getCtData, testVarType } from \"../../project\";\n\ntype Tprops = {\n  args: any;\n  pass: { arrFiles: any[]; arrFuncs: any[] };\n};\n\nexport const uploadFile = async (props: Tprops) => {\n  console.log(\"UPLOAD DE ARQUIVOS\");\n  // ---------- set Props\n  const { args, pass } = props;\n  const { arrFiles, arrFuncs } = pass;\n  console.log({ arrFiles, arrFuncs });\n\n  // ---------- set GetData Ref Strings\n  const newArrImages = arrFiles.map((i) => {\n    const varValue = testVarType(i, args);\n    console.log(\"2\", { varValue });\n\n    return varValue;\n  });\n\n  // -----------------------------\n  // -------- set Firestore Call 1\n  // -----------------------------\n  const fbInit = getCtData(\"all.temp.fireInit\");\n\n  const storage = getStorage(fbInit);\n  const objData = newArrImages;\n  console.log({ objData });\n\n  objData &&\n    objData.forEach(async (currData: any, idx: number) => {\n        console.log({ currData });\n      const time = Date.now().toString();\n      const strRefFile = ref(storage, `images/` + time + currData.name);\n      console.log({ strRefFile });\n      const file = objData.output[idx];\n      console.log({ file });\n      await uploadBytes(strRefFile, file);\n\n      // ---------- set Return Functions\n      const firestoreURL = await getDownloadURL(strRefFile);\n      console.log({ firestoreURL });\n\n      for (const currFunc of arrFuncs) await currFunc(args, firestoreURL, idx);\n    });\n};"}}