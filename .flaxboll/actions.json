{"1758828982207":{"actionType":"saveAll","createdAt":"1758828982207","actionID":"1758828982207","userID":"#TEMP","path":"system.capsules.c5cb7fa6-e831-49f5-915b-e3213e119958.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"async () => {\n\n    try {\n      await signUpWithEmail(email, senha, nome);\n      Alert.alert(\n        \"Conta criada\",\n        \"Enviamos um e-mail de verificação. Confirme para usar todos os recursos.\"\n      );\n      goTo(\"login\");\n    } catch (e) {\n      Alert.alert(\"Erro no cadastro\", e.message);\n    }\n\n}","newValue":"async () => {\n  // Lê inputs\n  const email = (\n    tools.getCtData('sc.A0C.forms.iptsChanges.userEmail') ?? ''\n  ).trim();\n  const senha = (\n    tools.getCtData('sc.A0C.forms.iptsChanges.userPassword') ?? ''\n  ).trim();\n  const nome = (\n    tools.getCtData('sc.A0C.forms.iptsChanges.userName') ?? ''\n  ).trim();\n\n  // Helpers p/ mensagens (ajuste os paths conforme seu UI)\n  const showMsg = (text: string, isError = false) => {\n    tools.setData({ path: 'sc.A0C.forms.showMsg', value: true });\n    tools.setData({ path: 'sc.A0C.forms.showErr', value: isError });\n    tools.setData({ path: 'sc.A0C.forms.msgs.msg1', value: text });\n  };\n\n  if (!email || !senha) {\n    showMsg('Informe e-mail e senha.', true);\n    return;\n  }\n  if (senha.length < 6) {\n    showMsg('A senha deve ter ao menos 6 caracteres.', true);\n    return;\n  }\n\n  // SDK imports\n  const {\n    getAuth,\n    createUserWithEmailAndPassword,\n    updateProfile,\n    sendEmailVerification,\n  } = await import('firebase/auth');\n\n  // Reaproveita app/auth se já existir\n  const fbInit = tools.getCtData('all.temp.fireInit');\n  const auth = fbInit ? getAuth(fbInit) : getAuth();\n\n  // (Opcional) use seu domínio/dynamic link\n  const actionCodeSettings =\n    tools.getCtData('all.temp.actionCodeSettings') || undefined;\n\n  try {\n    const cred = await createUserWithEmailAndPassword(auth, email, senha);\n\n    if (nome) {\n      await updateProfile(cred.user, { displayName: nome });\n    }\n\n    await sendEmailVerification(cred.user, actionCodeSettings);\n\n    // Mensagem de sucesso\n    showMsg(\n      'Conta criada. Enviamos um e-mail de verificação. Confirme para usar todos os recursos.',\n      false,\n    );\n\n    // (Opcional) limpar campos / navegar\n    tools.setData({\n      path: 'sc.A0C.forms.iptsChanges',\n      value: { userEmail: '', userPassword: '', userName: '' },\n    });\n    tools.goTo('login');\n  } catch (e: any) {\n    let msg = 'Não foi possível criar a conta.';\n    switch (e?.code) {\n      case 'auth/email-already-in-use':\n        msg = 'Este e-mail já está em uso.';\n        break;\n      case 'auth/invalid-email':\n        msg = 'E-mail inválido.';\n        break;\n      case 'auth/weak-password':\n        msg = 'Senha muito fraca.';\n        break;\n      default:\n        // console.log(e);\n        break;\n    }\n    showMsg(msg, true);\n  }\n}"}}