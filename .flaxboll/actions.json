{"1761850045043":{"actionType":"saveAll","createdAt":"1761850045043","actionID":"1761850045043","userID":"#TEMP","path":"system.capsules.9ede5bcc-a47c-4aa0-a2a7-5510d3d6a16e.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"(args) => {\n    const css1 =\n        \"color: limegreen; background-color: darkcyan; font-size: 11px; padding: 2px 6px; border-radius: 3px\";\n\n    const item = tools.findFlatItem(args);\n    const stepsList = tools.getCtData(\"sc.B7.lists.list1\");\n    const stepIdRaw = item?.stepId;\n\n    // ---- Guards\n    if (!item || stepIdRaw == null) {\n        console.warn(\"Step handler: item ou stepId ausente.\", { item });\n        return;\n    }\n\n    const stepId = String(stepIdRaw);\n    const pathSideRight = \"all.toggles.sideRight\";\n    const pathEdit = \"all.toggles.b9.editSteps\";\n    const pathNew = \"all.toggles.b8.addSteps\";\n\n    // Abre painel lateral (comum)\n    tools.setData({ path: pathSideRight, value: true });\n\n    // Procura match por stepId\n    const matched = Array.isArray(stepsList)\n        ? stepsList.find((d: any) => String(d?.stepId) === stepId)\n        : undefined;\n\n    const condMatch = Boolean(matched);\n    const currId = matched?.docId;\n    const currMail = matched?.email;\n\n    console.log({ item, stepsList, matched, condMatch });\n\n    if (!condMatch) {\n        // ---- Modo Adicionar\n        console.log(\"%cAdd New Step Mode - \" + pathNew, css1);\n\n        tools.setData({ path: pathNew, value: true });\n        tools.setData({ path: pathEdit, value: false });\n\n        // stepId sempre preenchido\n        tools.setData({ path: \"sc.B8.forms.editChanges.stepId\", value: stepId });\n\n        // Evita undefined: use vazio ou herde do item\n        const newEmail = item?.email ?? \"\";\n        tools.setData({ path: \"sc.B8.forms.editChanges.email\", value: newEmail });\n\n        // (Opcional) limpar possíveis resíduos do form de edição\n        tools.setData({ path: \"sc.B9.forms.editChanges.docId\", value: \"\" });\n        tools.setData({ path: \"sc.B9.forms.editChanges.stepId\", value: \"\" });\n        tools.setData({ path: \"sc.B9.forms.editChanges.email\", value: \"\" });\n        return;\n    }\n\n    // ---- Modo Editar\n    console.log(\"%cEdit Step Mode - \" + pathEdit, css1);\n\n    tools.setData({ path: pathEdit, value: true });\n    tools.setData({ path: pathNew, value: false });\n\n    tools.setData({ path: \"sc.B9.forms.editChanges.docId\", value: currId ?? \"\" });\n    tools.setData({ path: \"sc.B9.forms.editChanges.stepId\", value: stepId });\n    tools.setData({ path: \"sc.B9.forms.editChanges.email\", value: currMail ?? \"\" });\n\n    // (Opcional) limpar possíveis resíduos do form de novo\n    tools.setData({ path: \"sc.B8.forms.iptsChanges.stepId\", value: \"\" });\n    tools.setData({ path: \"sc.B8.forms.iptsChanges.email\", value: \"\" });\n}\n","newValue":"(args) => {\n    const css1 =\n        \"color: limegreen; background-color: darkcyan; font-size: 11px; padding: 2px 6px; border-radius: 3px\";\n\n    const item = tools.findFlatItem(args);\n    const stepsList = tools.getCtData(\"sc.B7.lists.list1\");\n    const stepIdRaw = item?.stepId;\n\n    // ---- Guards\n    if (!item || stepIdRaw == null) {\n        console.warn(\"Step handler: item ou stepId ausente.\", { item });\n        return;\n    }\n\n    const stepId = String(stepIdRaw);\n    const pathSideRight = \"all.toggles.sideRight\";\n    const pathEdit = \"all.toggles.b9.editSteps\";\n    const pathNew = \"all.toggles.b8.addSteps\";\n\n    // Abre painel lateral (comum)\n    tools.setData({ path: pathSideRight, value: true });\n\n    // Procura match por stepId\n    const matched = Array.isArray(stepsList)\n        ? stepsList.find((d: any) => String(d?.stepId) === stepId)\n        : undefined;\n\n    const condMatch = Boolean(matched);\n    const currId = matched?.docId;\n    const currMail = matched?.email;\n\n    console.log({ item, stepsList, matched, condMatch });\n\n    if (!condMatch) {\n        // ---- Modo Adicionar\n        console.log(\"%cAdd New Step Mode - \" + pathNew, css1);\n\n        tools.setData({ path: pathNew, value: true });\n        tools.setData({ path: pathEdit, value: false });\n\n        // stepId sempre preenchido\n        tools.setData({ path: \"sc.B8.forms.editChanges.stepId\", value: stepId });\n\n        // Evita undefined: use vazio ou herde do item\n        const newEmail = item?.email ?? \"\";\n        tools.setData({ path: \"sc.B8.forms.editChanges.email\", value: newEmail });\n\n        // (Opcional) limpar possíveis resíduos do form de edição\n        tools.setData({ path: \"sc.B9.forms.editChanges.docId\", value: \"\" });\n        tools.setData({ path: \"sc.B9.forms.editChanges.stepId\", value: \"\" });\n        tools.setData({ path: \"sc.B9.forms.editChanges.email\", value: \"\" });\n        return;\n    }\n\n    // ---- Modo Editar\n    console.log(\"%cEdit Step Mode - \" + pathEdit, css1);\n\n    tools.setData({ path: pathEdit, value: true });\n    tools.setData({ path: pathNew, value: false });\n\n    tools.setData({ path: \"sc.B9.forms.editChanges.docId\", value: currId ?? \"\" });\n    tools.setData({ path: \"sc.B9.forms.editChanges.stepId\", value: stepId });\n    tools.setData({ path: \"sc.B9.forms.editChanges.email\", value: currMail ?? \"\" });\n\n    // (Opcional) limpar possíveis resíduos do form de novo\n    tools.setData({ path: \"sc.B8.forms.iptsChanges.stepId\", value: \"\" });\n    tools.setData({ path: \"sc.B8.forms.iptsChanges.email\", value: \"\" });\n}"}}