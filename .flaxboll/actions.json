{"1753985184988":{"actionType":"saveAll","createdAt":"1753985184988","actionID":"1753985184988","userID":"#TEMP","path":"system.capsules.665979e6-3560-46a2-a871-c913d82be2e2.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Packs\nimport React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as RN from 'react-native';\n\ntype Tprops = {\n  pass: {\n    variable: string[];\n    childrenItems: any[];\n    arrFuncs: any[];\n    args: any;\n  };\n};\nconst css =\n  'color: #54ff00; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\n\nexport const BtnImagePicker = (props: Tprops) => {\n  // ---------- set Props\n  const { arrFuncs, args } = props.pass;\n  const [image, setImage] = React.useState<string | null>(null);\n\n  console.log({ arrFuncs, args });\n\n  const pickImage = async () => {\n\t\t// Solicita permissão para acessar a galeria\nconsole.log(\"ImagePicker Btn Presses\");\n\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== 'granted') {\n      RN.Alert.alert(\n        'Permissão necessária',\n        'Precisamos de acesso à sua galeria.',\n      );\n      return;\n    }\n\n    // Abre a galeria\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images, // apenas imagens\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setImage(result.assets[0].uri); // pega a URI da imagem selecionada\n    }\n  };\n\n  return (\n    <>\n      <RN.View style={styles.container}>\n        <RN.Button title=\"Escolher imagem\" onPress={pickImage} />\n        {image && <RN.Image source={{ uri: image }} style={styles.image} />}\n      </RN.View>\n    </>\n  );\n};\n\nconst styles = RN.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 20,\n  },\n  image: {\n    width: 300,\n    height: 200,\n    resizeMode: 'cover',\n    borderRadius: 10,\n  },\n});\n","newValue":"// ---------- import Packs\nimport React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as RN from 'react-native';\n\ntype Tprops = {\n  pass: {\n    variable: string[];\n    childrenItems: any[];\n    arrFuncs: any[];\n    args: any;\n  };\n};\nconst css =\n  'color: #54ff00; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\n\nexport const BtnImagePicker = (props: Tprops) => {\n  // ---------- set Props\n  const { arrFuncs, args } = props.pass;\n  const [image, setImage] = React.useState<string | null>(null);\n\n  console.log({ arrFuncs, args });\n\n  const pickImage = async () => {\n\t\t// Solicita permissão para acessar a galeria\nconsole.log(\"ImagePicker Btn Pressed\");\n\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== 'granted') {\n      RN.Alert.alert(\n        'Permissão necessária',\n        'Precisamos de acesso à sua galeria.',\n      );\n      return;\n    }\n\n    // Abre a galeria\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images, // apenas imagens\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setImage(result.assets[0].uri); // pega a URI da imagem selecionada\n    }\n  };\n\n  return (\n    <>\n      <RN.View style={styles.container}>\n        <RN.Button title=\"Escolher imagem\" onPress={pickImage} />\n        {image && <RN.Image source={{ uri: image }} style={styles.image} />}\n      </RN.View>\n    </>\n  );\n};\n\nconst styles = RN.StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 20,\n  },\n  image: {\n    width: 300,\n    height: 200,\n    resizeMode: 'cover',\n    borderRadius: 10,\n  },\n});\n"}}