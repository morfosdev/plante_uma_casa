{"1761067944384":{"actionType":"saveAll","createdAt":"1761067944384","actionID":"1761067944384","userID":"#TEMP","path":"system.capsules.06b83859-45ee-45cd-9bfc-55f317f58a7a.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"async () => {\n  try {\n    const A0D = tools.getCtData('sc.A0D.forms.iptsChanges');\n    console.log({ A0D });\n\n    // --- garante oobCode vindo da URL, se não estiver no estado\n    let oobCode = (A0D.oobCode ?? '').trim();\n    if (!oobCode && typeof window !== 'undefined') {\n      const p = new URLSearchParams(window.location.search);\n      oobCode = (p.get('oobCode') ?? '').trim();\n      if (oobCode) {\n        tools.setData({ path: 'sc.A0D.forms.iptsChanges.oobCode', value: oobCode });\n      }\n    }\n\n    const password = (A0D.userPassword ?? '').trim();\n    const confirmPassword = (A0D.confirmPassword ?? '').trim();\n\n    // validações básicas\n    if (password.length < 6) {\n      tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n      tools.setData({ path: 'sc.A0D.msgs.msg1', value: 'A senha deve ter ao menos 6 caracteres.' });\n      return;\n    }\n    if (password !== confirmPassword) {\n      tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n      tools.setData({ path: 'sc.A0D.msgs.msg1', value: 'As senhas não coincidem.' });\n      return;\n    }\n    if (!oobCode) {\n      tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n      tools.setData({ path: 'sc.A0D.msgs.msg1', value: 'Link inválido. Abra novamente o link enviado por e-mail.' });\n      return;\n    }\n\n    console.log('Login Pass Validated');\n\n    // Auth\n    const { getAuth, verifyPasswordResetCode, confirmPasswordReset } = await import('firebase/auth');\n    const fbInit = tools.getCtData('all.temp.fireInit');\n    console.log({ fbInit });\n    const auth = fbInit ? getAuth(fbInit) : getAuth();\n\n    // valida o código ANTES (já dá erro legível se estiver vencido/inválido)\n    try {\n      const emailDaConta = await verifyPasswordResetCode(auth, oobCode);\n      console.log('verifyPasswordResetCode OK para:', emailDaConta);\n    } catch (err: any) {\n      const code = err?.code ?? '';\n      tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n      tools.setData({\n        path: 'sc.A0D.msgs.msg1',\n        value:\n          code === 'auth/expired-action-code'\n            ? 'Este link expirou. Solicite um novo e-mail de redefinição.'\n            : code === 'auth/invalid-action-code'\n              ? 'Este link é inválido ou já foi utilizado. Solicite um novo e-mail.'\n              : 'Não foi possível validar o link. Tente novamente.',\n      });\n      return;\n    }\n\n    // aplica a nova senha\n    await confirmPasswordReset(auth, oobCode, password);\n\n    // sucesso\n    tools.setData({ path: 'sc.A0D.forms.showErr', value: false });\n    tools.setData({ path: 'sc.A0D.forms.showSuccess', value: true });\n    tools.setData({\n      path: 'sc.A0D.forms.msgs.msg1',\n      value: 'Senha alterada com sucesso! Volte para o login e entre com a nova senha.',\n    });\n  } catch (e: any) {\n    const code = e?.code ?? '';\n    let msg =\n      'Erro ao alterar a senha. Tente novamente.';\n    if (code === 'auth/weak-password') msg = 'A nova senha é muito fraca (mínimo de 6 caracteres).';\n    if (code === 'auth/expired-action-code') msg = 'Este link expirou. Solicite um novo e-mail.';\n    if (code === 'auth/invalid-action-code') msg = 'Link inválido ou já utilizado. Solicite um novo e-mail.';\n\n    tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n    tools.setData({ path: 'sc.A0D.forms.msgs.msg1', value: msg + (code ? ` (${code})` : '') });\n    console.error(e);\n  }\n}\n","newValue":"async () => {\n  try {\n    const A0D = tools.getCtData('sc.A0D.forms.iptsChanges');\n    console.log({ A0D });\n\n    const password = (A0D.userPassword ?? '').trim();\n    const confirmPassword = (A0D.confirmPassword ?? '').trim();\n    const oobCode = (A0D.oobCode ?? '').trim(); // obtido via link\n\n    // validações básicas\n    if (password.length < 6) {\n      tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n      tools.setData({ path: 'sc.A0D.msgs.msg1', value: 'A senha deve ter ao menos 6 caracteres.' });\n      return;\n    }\n    console.log(\"Login Pass Validated 1\");\n\n    if (password !== confirmPassword) {\n      tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n      tools.setData({ path: 'sc.A0D.msgs.msg1', value: 'As senhas não coincidem.' });\n      return;\n    }\n\n    console.log(\"Login Pass Validated 2\");\n    // Auth\n    const { getAuth, confirmPasswordReset } = await import('firebase/auth');\n    const fbInit = tools.getCtData('all.temp.fireInit');\n    console.log({ fbInit });\n    const auth = fbInit ? getAuth(fbInit) : getAuth();\n\n\n    await confirmPasswordReset(auth, oobCode, password);\n\n    // sucesso\n    console.log(\"Login Successful\");\n    tools.setData({ path: 'sc.A0D.forms.showErr', value: false });\n    tools.setData({ path: 'sc.A0D.forms.showSuccess', value: true });\n    tools.setData({ path: 'sc.A0D.forms.msgs.msg1', value: 'Senha alterada! Volte para Login e entre com a nova senha' });\n  } catch (e: any) {\n    tools.setData({ path: 'sc.A0D.forms.showErr', value: true });\n    tools.setData({ path: 'sc.A0D.forms.msgs.msg1', value: 'Erro ao alterar a senha. ' + (e?.message ?? '') });\n  }\n}"}}