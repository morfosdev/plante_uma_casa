{"1758825331056":{"actionType":"saveAll","createdAt":"1758825331056","actionID":"1758825331056","userID":"#TEMP","path":"system.capsules.996d3eb0-bb27-414c-b93e-5b130b7ea38e.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"async () => {\n  const path = 'sc.A0B.forms.iptsChanges.userEmail';\n  const raw = tools.getCtData(path);\n  const email = (raw ?? '').trim();\n\n  if (!email) {\n    tools.setData({ path: 'sc.A0B.forms.showErr', value: true });\n    tools.setData({\n      path: 'sc.A0B.forms.msgs.msg1',\n      value: 'Informe um e-mail válido.',\n    });\n    return;\n  }\n\n  const { getAuth, sendPasswordResetEmail } = await import('firebase/auth');\n  let fbInit = tools.getCtData('all.temp.fireInit');\n  const auth = fbInit ? getAuth(fbInit) : getAuth();\n\n  try {\n    await sendPasswordResetEmail(auth, email);\n\n    tools.setData({\n      path: 'sc.A0.forms.showErr',\n      value:\n        'Enviamos as instruções para redefinir a senha no e-mail informado.',\n    });\n  } catch (e) {\n    // mapeia alguns erros comuns\n    let msg = 'Não foi possível enviar o e-mail de redefinição.';\n    if (e?.code === 'auth/invalid-email') msg = 'E-mail inválido.';\n    if (e?.code === 'auth/too-many-requests')\n      msg = 'Muitas tentativas. Tente novamente mais tarde.';\n    // obs: Firebase pode retornar sucesso mesmo se o e-mail não existir, por segurança\n\n    console.log('Erro reset senha:', e?.code || e?.message);\n    tools.setData({ path: 'sc.A0.forms.showErr', value: true });\n    tools.setData({ path: 'sc.A0.forms.msgs.msg1', value: msg });\n  } finally {\n    console.log('Reset senha: finally');\n  }\n}","newValue":"async () => {\n  const path = 'sc.A0B.forms.iptsChanges.userEmail';\n  const raw = tools.getCtData(path);\n  const email = (raw ?? '').trim();\n\n  if (!email) {\n    tools.setData({ path: 'sc.A0B.forms.showErr', value: true });\n    tools.setData({\n      path: 'sc.A0B.forms.msgs.msg1',\n      value: 'Informe um e-mail válido.',\n    });\n    return;\n  }\n\n  const { getAuth, sendPasswordResetEmail } = await import('firebase/auth');\n  let fbInit = tools.getCtData('all.temp.fireInit');\n  const auth = fbInit ? getAuth(fbInit) : getAuth();\n\n  try {\n    await sendPasswordResetEmail(auth, email);\n\n    tools.setData({\n      path: 'sc.A0B.forms.showErr',\n      value:\n        'Enviamos as instruções para redefinir a senha no e-mail informado.',\n    });\n  } catch (e) {\n    // mapeia alguns erros comuns\n    let msg = 'Não foi possível enviar o e-mail de redefinição.';\n    if (e?.code === 'auth/invalid-email') msg = 'E-mail inválido.';\n    if (e?.code === 'auth/too-many-requests')\n      msg = 'Muitas tentativas. Tente novamente mais tarde.';\n    // obs: Firebase pode retornar sucesso mesmo se o e-mail não existir, por segurança\n\n    console.log('Erro reset senha:', e?.code || e?.message);\n    tools.setData({ path: 'sc.A0B.forms.showErr', value: true });\n    tools.setData({ path: 'sc.A0B.forms.msgs.msg1', value: msg });\n  } finally {\n    console.log('Reset senha: finally');\n  }\n}"}}