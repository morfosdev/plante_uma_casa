{"1761744362061":{"actionType":"saveAll","createdAt":"1761744362061","actionID":"1761744362061","userID":"#TEMP","path":"system.capsules.f3787e15-17c7-4547-9292-d07ec7e7ba0f.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"(value) => {\n  // Remove tudo que não for número\n  let cleaned = value.replace(/\\D/g, \"\");\n\n  // Limita a 8 caracteres (DDMMAAAA)\n  if (cleaned.length > 8) cleaned = cleaned.slice(0, 8);\n\n  // Adiciona as barras conforme o usuário digita\n  let formatted = cleaned;\n  if (cleaned.length > 4) {\n    formatted = cleaned.replace(/(\\d{2})(\\d{2})(\\d{1,4})/, \"$1/$2/$3\");\n  } else if (cleaned.length > 2) {\n    formatted = cleaned.replace(/(\\d{2})(\\d{1,2})/, \"$1/$2\");\n  }\n\n  // Atualiza a variável com o valor formatado\n  tools.functions.setVar({\n    args: \"\",\n    pass: {\n      keyPath: [\"sc.a1.iptChanges.startDate\"],\n      value: [formatted],\n    },\n  });\n\n  // Retorna o valor formatado (caso o campo use retorno direto)\n  return formatted;\n}\n","newValue":"(value) => {\n  // Garantir que o valor é string\n  if (!value) value = \"\";\n\n  // Remove tudo que não for número\n  let cleaned = value.replace(/\\D/g, \"\");\n\n  // Limita a 8 dígitos (DDMMAAAA)\n  if (cleaned.length > 8) cleaned = cleaned.slice(0, 8);\n\n  // Adiciona as barras conforme o usuário digita\n  let formatted = cleaned;\n  if (cleaned.length > 4) {\n    formatted = cleaned.replace(/^(\\d{2})(\\d{2})(\\d{1,4}).*/, \"$1/$2/$3\");\n  } else if (cleaned.length > 2) {\n    formatted = cleaned.replace(/^(\\d{2})(\\d{1,2})/, \"$1/$2\");\n  }\n\n  // Atualiza a variável no contexto Flaxboll\n  tools.setData({\n    path: \"sc.a1.iptChanges.startDate\",\n    value: formatted,\n  });\n\n  // Retorna o valor formatado (usado pelo input)\n  return formatted;\n}\n"}}